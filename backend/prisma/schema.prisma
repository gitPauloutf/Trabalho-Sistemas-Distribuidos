// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String    @id @default(uuid())
  name     String
  password String
  email    String    @unique
  isAdmin  Boolean   @default(true)
  product  Product[]

  @@map("admin")
}

model Order {
  id           String      @id @default(uuid())
  nameCustomer String
  orderNumber  Int         @unique @default(autoincrement())
  status       OrderStatus
  discription  String?
  price        Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  OrderItem OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId String
  Order   Order  @relation(fields: [orderId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@map("orderItems")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  image       String
  name        String
  price       Float
  description String?

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  OrderItem OrderItem[]

  adminId String?
  Admin   Admin?  @relation(fields: [adminId], references: [id])

  @@map("products")
}

enum OrderStatus {
  PEDIDO_NA_COZINHA
  PEDIDO_PRONTO
  SAINDO_PARA_ENTREGA
}
